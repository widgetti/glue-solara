name: Test Workflow

on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash {0}

jobs:
  build:
    uses: ./.github/workflows/build.yaml

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pre-commit
        run: |
          pip install pre-commit
          pre-commit install

      - name: run pre-commit
        run: |
          pre-commit run --all-files

  unit-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheel-${{ github.run_number }}
          path: dist

      - name: Install package
        run: |
          uv pip install `echo dist/*.whl`[test] --system

      - name: Run unit tests
        run: |
          pytest tests/unit

  integration-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheel-${{ github.run_number }}
          path: dist

      - name: Install package
        run: |
          uv pip install `echo dist/*.whl`[test] --system

      - name: Install Playwright
        run: |
          playwright install

      - name: Run integration tests
        run: |
          pytest tests/integration --video=retain-on-failure --output=test-results

      - name: upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results-unit-os${{ matrix.os }}-python${{ matrix.python }}
          path: test-results
          include-hidden-files: true
